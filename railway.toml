# =================================================================
# üìÅ Ruta: /erp13-enterprise/railway.toml  
# üìÑ Nombre: railway.toml
# üèóÔ∏è Prop√≥sito: Configuraci√≥n Railway CORREGIDA sin buildCommand problem√°tico
# ‚ö° Performance: Usa defaults Nixpacks + deploy optimizado
# üîí Seguridad: Sin comandos que rompan Dockerfile
# =================================================================

[build]
# ‚úÖ SIN BUILDCOMMAND PERSONALIZADO - USA NIXPACKS DEFAULTS
# Nixpacks detecta Python autom√°ticamente y hace:
# - pip install -r requirements.txt 
# - Configuraci√≥n virtual environment
# - Build optimizado autom√°tico

[deploy]
# üöÄ COMANDO START ESPEC√çFICO PARA TU MAIN.PY
startCommand = "gunicorn --bind 0.0.0.0:$PORT --workers 2 --worker-class sync --timeout 120 --keep-alive 5 --max-requests 1000 --max-requests-jitter 50 --preload --worker-tmp-dir /dev/shm --log-level info --access-logfile - --error-logfile - --capture-output --enable-stdio-inheritance --pythonpath . wsgi:application"

# üè• HEALTH CHECK CONFIGURACI√ìN
healthcheckPath = "/health"
healthcheckTimeout = 10
restartPolicyType = "on_failure"
restartPolicyMaxRetries = 3

# ‚è±Ô∏è TIMEOUTS OPTIMIZADOS
deployTimeout = 300
startTimeout = 60
stopTimeout = 30

# üîß VARIABLES DE ENTORNO CR√çTICAS
[env]
FLASK_APP = "main.py"
FLASK_ENV = "production"
FLASK_DEBUG = "False"
PORT = "8080"
WORKERS = "2"
TIMEOUT = "120"
PYTHONPATH = "."
PYTHONUNBUFFERED = "1"
PYTHONDONTWRITEBYTECODE = "1"
